{"ast":null,"code":"import { SafeSubscriber, Subscriber } from './Subscriber';\nimport { isSubscription } from './Subscription';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nimport { isFunction } from './util/isFunction';\nimport { errorContext } from './util/errorContext';\nexport class Observable {\n  constructor(subscribe) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n  lift(operator) {\n    const observable = new Observable();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n  subscribe(observerOrNext, error, complete) {\n    const subscriber = isSubscriber(observerOrNext) ? observerOrNext : new SafeSubscriber(observerOrNext, error, complete);\n    errorContext(() => {\n      const {\n        operator,\n        source\n      } = this;\n      subscriber.add(operator ? operator.call(subscriber, source) : source ? this._subscribe(subscriber) : this._trySubscribe(subscriber));\n    });\n    return subscriber;\n  }\n  _trySubscribe(sink) {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      sink.error(err);\n    }\n  }\n  forEach(next, promiseCtor) {\n    promiseCtor = getPromiseCtor(promiseCtor);\n    return new promiseCtor((resolve, reject) => {\n      const subscriber = new SafeSubscriber({\n        next: value => {\n          try {\n            next(value);\n          } catch (err) {\n            reject(err);\n            subscriber.unsubscribe();\n          }\n        },\n        error: reject,\n        complete: resolve\n      });\n      this.subscribe(subscriber);\n    });\n  }\n  _subscribe(subscriber) {\n    var _a;\n    return (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber);\n  }\n  [Symbol_observable]() {\n    return this;\n  }\n  pipe(...operations) {\n    return pipeFromArray(operations)(this);\n  }\n  toPromise(promiseCtor) {\n    promiseCtor = getPromiseCtor(promiseCtor);\n    return new promiseCtor((resolve, reject) => {\n      let value;\n      this.subscribe(x => value = x, err => reject(err), () => resolve(value));\n    });\n  }\n}\nObservable.create = subscribe => {\n  return new Observable(subscribe);\n};\nfunction getPromiseCtor(promiseCtor) {\n  var _a;\n  return (_a = promiseCtor !== null && promiseCtor !== void 0 ? promiseCtor : config.Promise) !== null && _a !== void 0 ? _a : Promise;\n}\nfunction isObserver(value) {\n  return value && isFunction(value.next) && isFunction(value.error) && isFunction(value.complete);\n}\nfunction isSubscriber(value) {\n  return value && value instanceof Subscriber || isObserver(value) && isSubscription(value);\n}","map":{"version":3,"names":["SafeSubscriber","Subscriber","isSubscription","observable","Symbol_observable","pipeFromArray","config","isFunction","errorContext","Observable","constructor","subscribe","_subscribe","lift","operator","source","observerOrNext","error","complete","subscriber","isSubscriber","add","call","_trySubscribe","sink","err","forEach","next","promiseCtor","getPromiseCtor","resolve","reject","value","unsubscribe","_a","pipe","operations","toPromise","x","create","Promise","isObserver"],"sources":["C:/Users/Noril/Documents/team3990/node_modules/rxjs/dist/esm/internal/Observable.js"],"sourcesContent":["import { SafeSubscriber, Subscriber } from './Subscriber';\r\nimport { isSubscription } from './Subscription';\r\nimport { observable as Symbol_observable } from './symbol/observable';\r\nimport { pipeFromArray } from './util/pipe';\r\nimport { config } from './config';\r\nimport { isFunction } from './util/isFunction';\r\nimport { errorContext } from './util/errorContext';\r\nexport class Observable {\r\n    constructor(subscribe) {\r\n        if (subscribe) {\r\n            this._subscribe = subscribe;\r\n        }\r\n    }\r\n    lift(operator) {\r\n        const observable = new Observable();\r\n        observable.source = this;\r\n        observable.operator = operator;\r\n        return observable;\r\n    }\r\n    subscribe(observerOrNext, error, complete) {\r\n        const subscriber = isSubscriber(observerOrNext) ? observerOrNext : new SafeSubscriber(observerOrNext, error, complete);\r\n        errorContext(() => {\r\n            const { operator, source } = this;\r\n            subscriber.add(operator\r\n                ?\r\n                    operator.call(subscriber, source)\r\n                : source\r\n                    ?\r\n                        this._subscribe(subscriber)\r\n                    :\r\n                        this._trySubscribe(subscriber));\r\n        });\r\n        return subscriber;\r\n    }\r\n    _trySubscribe(sink) {\r\n        try {\r\n            return this._subscribe(sink);\r\n        }\r\n        catch (err) {\r\n            sink.error(err);\r\n        }\r\n    }\r\n    forEach(next, promiseCtor) {\r\n        promiseCtor = getPromiseCtor(promiseCtor);\r\n        return new promiseCtor((resolve, reject) => {\r\n            const subscriber = new SafeSubscriber({\r\n                next: (value) => {\r\n                    try {\r\n                        next(value);\r\n                    }\r\n                    catch (err) {\r\n                        reject(err);\r\n                        subscriber.unsubscribe();\r\n                    }\r\n                },\r\n                error: reject,\r\n                complete: resolve,\r\n            });\r\n            this.subscribe(subscriber);\r\n        });\r\n    }\r\n    _subscribe(subscriber) {\r\n        var _a;\r\n        return (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber);\r\n    }\r\n    [Symbol_observable]() {\r\n        return this;\r\n    }\r\n    pipe(...operations) {\r\n        return pipeFromArray(operations)(this);\r\n    }\r\n    toPromise(promiseCtor) {\r\n        promiseCtor = getPromiseCtor(promiseCtor);\r\n        return new promiseCtor((resolve, reject) => {\r\n            let value;\r\n            this.subscribe((x) => (value = x), (err) => reject(err), () => resolve(value));\r\n        });\r\n    }\r\n}\r\nObservable.create = (subscribe) => {\r\n    return new Observable(subscribe);\r\n};\r\nfunction getPromiseCtor(promiseCtor) {\r\n    var _a;\r\n    return (_a = promiseCtor !== null && promiseCtor !== void 0 ? promiseCtor : config.Promise) !== null && _a !== void 0 ? _a : Promise;\r\n}\r\nfunction isObserver(value) {\r\n    return value && isFunction(value.next) && isFunction(value.error) && isFunction(value.complete);\r\n}\r\nfunction isSubscriber(value) {\r\n    return (value && value instanceof Subscriber) || (isObserver(value) && isSubscription(value));\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}