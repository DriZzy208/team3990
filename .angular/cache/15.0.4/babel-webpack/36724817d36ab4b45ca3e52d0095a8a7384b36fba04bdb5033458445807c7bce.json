{"ast":null,"code":"import { operate } from '../util/lift';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { mergeAll } from './mergeAll';\nimport { popNumber, popScheduler } from '../util/args';\nimport { from } from '../observable/from';\nexport function merge(...args) {\n  const scheduler = popScheduler(args);\n  const concurrent = popNumber(args, Infinity);\n  args = argsOrArgArray(args);\n  return operate((source, subscriber) => {\n    mergeAll(concurrent)(from([source, ...args], scheduler)).subscribe(subscriber);\n  });\n}","map":{"version":3,"names":["operate","argsOrArgArray","mergeAll","popNumber","popScheduler","from","merge","args","scheduler","concurrent","Infinity","source","subscriber","subscribe"],"sources":["C:/Users/Noril/Documents/team3990/node_modules/rxjs/dist/esm/internal/operators/merge.js"],"sourcesContent":["import { operate } from '../util/lift';\r\nimport { argsOrArgArray } from '../util/argsOrArgArray';\r\nimport { mergeAll } from './mergeAll';\r\nimport { popNumber, popScheduler } from '../util/args';\r\nimport { from } from '../observable/from';\r\nexport function merge(...args) {\r\n    const scheduler = popScheduler(args);\r\n    const concurrent = popNumber(args, Infinity);\r\n    args = argsOrArgArray(args);\r\n    return operate((source, subscriber) => {\r\n        mergeAll(concurrent)(from([source, ...args], scheduler)).subscribe(subscriber);\r\n    });\r\n}\r\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,cAAc;AACtC,SAASC,cAAc,QAAQ,wBAAwB;AACvD,SAASC,QAAQ,QAAQ,YAAY;AACrC,SAASC,SAAS,EAAEC,YAAY,QAAQ,cAAc;AACtD,SAASC,IAAI,QAAQ,oBAAoB;AACzC,OAAO,SAASC,KAAK,CAAC,GAAGC,IAAI,EAAE;EAC3B,MAAMC,SAAS,GAAGJ,YAAY,CAACG,IAAI,CAAC;EACpC,MAAME,UAAU,GAAGN,SAAS,CAACI,IAAI,EAAEG,QAAQ,CAAC;EAC5CH,IAAI,GAAGN,cAAc,CAACM,IAAI,CAAC;EAC3B,OAAOP,OAAO,CAAC,CAACW,MAAM,EAAEC,UAAU,KAAK;IACnCV,QAAQ,CAACO,UAAU,CAAC,CAACJ,IAAI,CAAC,CAACM,MAAM,EAAE,GAAGJ,IAAI,CAAC,EAAEC,SAAS,CAAC,CAAC,CAACK,SAAS,CAACD,UAAU,CAAC;EAClF,CAAC,CAAC;AACN"},"metadata":{},"sourceType":"module","externalDependencies":[]}